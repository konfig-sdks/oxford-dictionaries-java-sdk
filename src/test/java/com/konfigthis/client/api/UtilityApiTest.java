/*
 * Oxford Dictionaries
 * Oxford Dictionaries, part of the Oxford Language Division, is a leading authority on the English language. It offers a wide range of language resources, including dictionaries, thesauruses, grammar guides, and language learning tools. Oxford Dictionaries provides accurate and up-to-date definitions, word origins, and usage examples to support language comprehension and communication.
 *
 * The version of the OpenAPI document: 1.11.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Filters;
import com.konfigthis.client.model.Languages;
import com.konfigthis.client.model.Regions;
import com.konfigthis.client.model.UtilityLabels;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UtilityApi
 */
@Disabled
public class UtilityApiTest {

    private static UtilityApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new UtilityApi(apiClient);
    }

    /**
     * Lists available grammatical features in a dataset
     *
     * Returns a list of the available [grammatical features](documentation/glossary?term&#x3D;grammaticalfeatures) for a given language dataset. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGrammaticalFeaturesTest() throws ApiException {
        String sourceLanguage = null;
        UtilityLabels response = api.getGrammaticalFeatures(sourceLanguage)
                .execute();
        // TODO: test validations
    }

    /**
     * Lists available lexical categories in a dataset
     *
     * Returns a list of available [lexical categories](documentation/glossary?term&#x3D;lexicalcategory) for a given language dataset. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLexicalCategoriesTest() throws ApiException {
        String language = null;
        UtilityLabels response = api.getLexicalCategories(language)
                .execute();
        // TODO: test validations
    }

    /**
     * Lists available domains in a bilingual dataset
     *
     * Returns a list of the available [domains](documentation/glossary?term&#x3D;domain) for a given bilingual language dataset. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAvailableDomainsTest() throws ApiException {
        String sourceDomainsLanguage = null;
        String targetDomainsLanguage = null;
        UtilityLabels response = api.listAvailableDomains(sourceDomainsLanguage, targetDomainsLanguage)
                .execute();
        // TODO: test validations
    }

    /**
     * Lists available filters
     *
     * Returns a list of all the valid filters to construct API calls. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAvailableFiltersTest() throws ApiException {
        Filters response = api.listAvailableFilters()
                .execute();
        // TODO: test validations
    }

    /**
     * Lists available dictionaries
     *
     * Returns a list of monolingual and bilingual language datasets available in the API 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAvailableLanguagesTest() throws ApiException {
        String sourceLanguage = null;
        String targetLanguage = null;
        Languages response = api.listAvailableLanguages()
                .sourceLanguage(sourceLanguage)
                .targetLanguage(targetLanguage)
                .execute();
        // TODO: test validations
    }

    /**
     * Lists available registers in a bilingual dataset
     *
     * Returns a list of the available [registers](documentation/glossary?term&#x3D;registers) for a given bilingual language dataset. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBilingualRegistersTest() throws ApiException {
        String sourceRegisterLanguage = null;
        String targetRegisterLanguage = null;
        UtilityLabels response = api.listBilingualRegisters(sourceRegisterLanguage, targetRegisterLanguage)
                .execute();
        // TODO: test validations
    }

    /**
     * Lists available filters for specific endpoint
     *
     * Returns a list of all the valid filters for a given endpoint to construct API calls. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listEndpointFiltersTest() throws ApiException {
        String endpoint = null;
        Filters response = api.listEndpointFilters(endpoint)
                .execute();
        // TODO: test validations
    }

    /**
     * Lists available domains in a monolingual dataset
     *
     * Returns a list of the available [domains](documentation/glossary?term&#x3D;domain) for a given monolingual language dataset. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMonolingualDomainsTest() throws ApiException {
        String sourceLanguage = null;
        UtilityLabels response = api.listMonolingualDomains(sourceLanguage)
                .execute();
        // TODO: test validations
    }

    /**
     * Lists available regions in a monolingual dataset
     *
     * Returns a list of the available [regions](documentation/glossary?term&#x3D;regions) for a given monolingual language dataset. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMonolingualRegionsTest() throws ApiException {
        String sourceLanguage = null;
        Regions response = api.listMonolingualRegions(sourceLanguage)
                .execute();
        // TODO: test validations
    }

    /**
     * Lists available registers in a  monolingual dataset
     *
     * Returns a list of the available [registers](documentation/glossary?term&#x3D;registers) for a given monolingual language dataset. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMonolingualRegistersTest() throws ApiException {
        String sourceLanguage = null;
        UtilityLabels response = api.listMonolingualRegisters(sourceLanguage)
                .execute();
        // TODO: test validations
    }

}
